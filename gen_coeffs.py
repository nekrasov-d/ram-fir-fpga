#!/bin/python3
#
# Copyright Â© 2023 Dmitriy Nekrasov
# This work is free. You can redistribute it and/or modify it under the
# terms of the Do What The Fuck You Want To Public License, Version 2,
# as published by Sam Hocevar. See the COPYING file or http://www.wtfpl.net/
# for more details.
#
# A little script to generate tap coefficients with scipy firwin
# Creates altera/intel-like memory initialization file.
#

from scipy import signal
import matplotlib.pyplot as plt
import numpy as np

####################################################################################

NTAPS       = 511
CUTOFF      = 200
PASS_ZERO   = False
COEFF_WIDTH = 24
SHOW_PLOT   = False

N = int(2**(np.ceil(np.log2(NTAPS))))

MIF_HEADER = \
"-- This file is automatically generated by gen_coefficients.py program\n\
-- Number of taps : %d\n\
-- Cutoff frequency : %d Hz\n\
-- Type : %s\n\
\n\
\nWIDTH=%d;\
\nDEPTH=%d;\
\nADDERSS_RADIX=HEX;\
\nDATA_RADIX=HEX;\
\n\n" % ( NTAPS, CUTOFF, ("LOWPASS" if PASS_ZERO is True else "HIPASS"), COEFF_WIDTH, N )

def draw_plot( raw ):
  w, h = signal.freqz(raw, worN=8000 )
  plt.plot( w* 44100 /(np.pi*2), np.abs(h), 'b')
  plt.ylabel('Gain', color='b')
  plt.xlabel('Frequency')
  plt.axhline(0.5, alpha=0.3, color='k', linestyle='--', linewidth=1)
  plt.grid(True)
  plt.xlim(left=0)
  plt.xlim(right=1000)
  plt.show()

def create_rom_image( fname, y ):
  f = open( fname, "w" )
  f.write("%s" % MIF_HEADER)
  f.write("CONTENT BEGIN\n")
  for i in range( len( y ) ):
    wstr = "{:06x}".format(i) + "    :    " + "{:06x}".format(y[i]) + ";"
    f.write("%s\n" % wstr)
  f.write("END;\n")
  f.close()

###################################################################################

raw = signal.firwin(numtaps=NTAPS, cutoff=CUTOFF, fs=44100, pass_zero=PASS_ZERO)

if SHOW_PLOT is True:
  draw_plot( raw )

y = [0] * N

for i in range(0,N):
  if( i < NTAPS ):
    y[i] = int(round(2**(COEFF_WIDTH-1) * raw[i]))
    if( y[i] < 0 ):
      y[i] = ( (2**COEFF_WIDTH-1) ^ y[i] ) + 1 # getting two's complement
      y[i] = abs(y[i])

create_rom_image( "fir_coeffs.mif", y )




